# -*- coding: utf-8 -*-
"""
Created on Mon May  6 14:48:38 2019

@author: AntoniaPraetorius
"""

import numpy as np
from InitializationSS import initSS

def SteadyState(MainWater, SurfWater, Sediment, q):
    "This function solves the model in steady state mode"
    

    #compilation of rate constants

    K1, K10, K10B, K11, K11B, K11C, K11D, K12, K12B, K12C, K12D, K13, K13B, K13C, K13D, \
    K14, K14B, K14C, K14D, K15, K15B, K15C, K15D, K16, K16B, K16C, K16D, K17, K17B, K17C,\
    K17D, K18, K18B, K18C, K18D, K19, K19B, K19C, K19D, K1B, K2, K20, K20B, K20C, K20D, K21, \
    K21B, K21C, K21D, K22, K22B, K22C, K22D, K23, K23B, K23C, K23D, K24, K24B, K24C, K24D, K25,\
    K25B, K25C, K25D, K26, K26B, K27, K27B, K28, K28B, K29, K29B, K2B, K3, K30, K30B, K31, K32, \
    K33, K34, K35, K35B, K36, K36B, K37, K37B, K38, K38B, K39, K39B, K3B, K4, K4B, K5, K5B, K6,\
    K6B, K7, K7B, K8, K8B, K9, K9B = initSS(
        MainWater, Sediment, SurfWater)

    #set-up model matrix  

    
    #a = [-(K1+K11+K21+K26+K31+K35), K16, K33, K_2, 0, 0]
    #b=[K_6, - K_5 , 0 , 0 , 0 , 0]
    #c=[K_8, 0, - K_7, 0, 0, 0]
    #d=[K_10, 0, 0, - K_9, K_11, K_4]
    #e=[0, 0, 0, K_13, - K_12, 0]
    #f=[0, 0 ,0, K_14, 0,  - K_7]
    
    #TODO Some work is need here too.... if the values were all literal or numerical it would be very easy, the issue is that we pass strings that can have a num value (ex:1000), but I can do it :)
    Cw1_MP1=[-(K1+K11+K21+K26+K31+K35),K16,K33,K6,0,0,0,0,0,0,0,0,1000*K27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cws_MP1=[K21,- (K16+K26B+K32+K35B),0,0,0,0,0,0,0,0,0,0,0,1000*K27B,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cse_MP1=[K11,0,-(K33+K34),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cw1_MP1_SPM=[K1,0,0,- (K6+K11B+K21B+K31),K16B,K33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cws_MP1_SPM=[0,0,0,K21B,- (K16B+K32),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cse_MP1_SPM=[0,0,0,K11B,0,- (K33+K34),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cw1_MP1_BF=[K35,0,0,0,0,0,- (K1B+K11C+K21C+K31),K16C,K33,K6B,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cws_MP1_BF=[0,K35B,0,0,0,0,K21C,-(K16C+K32),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cse_MP1_BF=[0,0,0,0,0,0,K11C,0,- (K33+K34),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cw1_MP1_BF_SPM=[0,0,0,0,0,0,K1B,0,0,- (K6B+K11D+K21D+K31),K16D,K33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cws_MP1_BF_SPM=[0,0,0,0,0,0,0,0,0,K21D,- (K16D+K32),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cse_MP1_BF_SPM=[0,0,0,0,0,0,0,0,0,K11D,0,- (K33+K34),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cw1_MP2=[0,0,0,0,0,0,0,0,0,0,0,0,-(K2+K12+K22+K27+K31+K36),K17,K33,K7,0,0,0,0,0,0,0,0,1000*K28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cws_MP2=[0,0,0,0,0,0,0,0,0,0,0,0,K22,- (K17+K27B+K32+K36B),0,0,0,0,0,0,0,0,0,0,0,1000*K28B,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cse_MP2=[0,0,0,0,0,0,0,0,0,0,0,0,K12,0,-(K33+K34),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cw1_MP2_SPM=[0,0,0,0,0,0,0,0,0,0,0,0,K2,0,0,- (K7+K12B+K22B+K31),K17B,K33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cws_MP2_SPM=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K22B,- (K17B+K32),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cse_MP2_SPM=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K12B,0,- (K33+K34),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cw1_MP2_BF=[0,0,0,0,0,0,0,0,0,0,0,0,K36,0,0,0,0,0,- (K2B+K12C+K22C+K31),K17C,K33,K7B,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cws_MP2_BF=[0,0,0,0,0,0,0,0,0,0,0,0,0,K36B,0,0,0,0,K22C,-(K17C+K32),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cse_MP2_BF=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K12C,0,- (K33+K34),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cw1_MP2_BF_SPM=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K2B,0,0,- (K7B+K12D+K22D+K31),K17D,K33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cws_MP2_BF_SPM=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K22D,- (K17D+K32),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cse_MP2_BF_SPM=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K12D,0,- (K33+K34),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cw1_MP3=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-(K3+K13+K23+K28+K31+K37),K18,K33,K8,0,0,0,0,0,0,0,0,1000*K29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cws_MP3=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K23,- (K18+K28B+K32+K37B),0,0,0,0,0,0,0,0,0,0,0,1000*K29B,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cse_MP3=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K13,0,-(K33+K34),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cw1_MP3_SPM=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K3,0,0,- (K8+K13B+K23B+K31),K18B,K33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cws_MP3_SPM=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K23B,- (K18B+K32),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cse_MP3_SPM=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K13B,0,- (K33+K34),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cw1_MP3_BF=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K37,0,0,0,0,0,- (K3B+K13C+K23C+K31),K18C,K33,K8B,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cws_MP3_BF=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K37B,0,0,0,0,K23C,-(K18C+K32),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cse_MP3_BF=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K13C,0,- (K33+K34),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cw1_MP3_BF_SPM=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K3B,0,0,- (K8B+K13D+K23D+K31),K18D,K33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cws_MP3_BF_SPM=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K23D,- (K18D+K32),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cse_MP3_BF_SPM=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K13D,0,- (K33+K34),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cw1_MP4=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-(K4+K14+K24+K29+K31+K38),K19,K33,K9,0,0,0,0,0,0,0,0,1000*K30,0,0,0,0,0,0,0,0,0,0,0]
    Cws_MP4=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K24,- (K19+K29B+K32+K38B),0,0,0,0,0,0,0,0,0,0,0,1000*K30B,0,0,0,0,0,0,0,0,0,0]
    Cse_MP4=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K14,0,-(K33+K34),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cw1_MP4_SPM=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K4,0,0,- (K9+K14B+K24B+K31),K19B,K33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cws_MP4_SPM=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K24B,- (K19B+K32),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cse_MP4_SPM=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K14B,0,- (K33+K34),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cw1_MP4_BF=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K38,0,0,0,0,0,- (K4B+K14C+K24C+K31),K19C,K33,K9B,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cws_MP4_BF=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K38B,0,0,0,0,K24C,-(K19C+K32),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cse_MP4_BF=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K14C,0,- (K33+K34),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cw1_MP4_BF_SPM=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K4B,0,0,- (K9B+K14D+K24D+K31),K19D,K33,0,0,0,0,0,0,0,0,0,0,0,0]
    Cws_MP4_BF_SPM=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K24D,- (K19D+K32),0,0,0,0,0,0,0,0,0,0,0,0,0]
    Cse_MP4_BF_SPM=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K14D,0,- (K33+K34),0,0,0,0,0,0,0,0,0,0,0,0]
    Cw1_MP5=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-(K5+K15+K25+K30+K31+K39),0,K33,K10,0,0,0,0,0,0,0,0]
    Cws_MP5=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K25,- (K20+K30B+K32+K39B),0,0,0,0,0,0,0,0,0,0]
    Cse_MP5=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K15,0,-(K33+K34),0,0,0,0,0,0,0,0,0]
    Cw1_MP5_SPM=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K5,0,0,- (K10+K15B+K25B+K31),K20B,K33,0,0,0,0,0,0]
    Cws_MP5_SPM=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K25B,- (K20B+K32),0,0,0,0,0,0,0]
    Cse_MP5_SPM=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K15B,0,- (K33+K34),0,0,0,0,0,0]
    Cw1_MP5_BF=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K39,0,0,0,0,0,- (K5B+K15C+K25C+K31),K20C,K33,K10B,0,0]
    Cws_MP5_BF=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K39B,0,0,0,0,K25C,-(K20C+K32),0,0,0,0]
    Cse_MP5_BF=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K15C,0,- (K33+K34),0,0,0]
    Cw1_MP5_BF_SPM=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K5B,0,0,- (K10B+K15D+K25D+K31),K20D,K33]
    Cws_MP5_BF_SPM=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K25D,- (K20D+K32),0]
    Cse_MP5_BF_SPM=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,K15D,0,- (K33+K34)]


      
    inputVector=[-q,0,0,0,0,0,0,0,0,0,0,0,-q,0,0,0,0,0,0,0,0,0,0,0,-q,0,0,0,0,0,0,0,0,0,0,0,-q,0,0,0,0,0,0,0,0,0,0,0,-q,0,0,0,0,0,0,0,0,0,0,0]
      
    matrix=(Cw1_MP1,Cws_MP1,Cse_MP1,Cw1_MP1_SPM,Cws_MP1_SPM,Cse_MP1_SPM,Cw1_MP1_BF,Cws_MP1_BF,Cse_MP1_BF,Cw1_MP1_BF_SPM,Cws_MP1_BF_SPM,Cse_MP1_BF_SPM,Cw1_MP2,Cws_MP2,Cse_MP2,Cw1_MP2_SPM,Cws_MP2_SPM,Cse_MP2_SPM,Cw1_MP2_BF,Cws_MP2_BF,Cse_MP2_BF,Cw1_MP2_BF_SPM,Cws_MP2_BF_SPM,Cse_MP2_BF_SPM,Cw1_MP3,Cws_MP3,Cse_MP3,Cw1_MP3_SPM,Cws_MP3_SPM,Cse_MP3_SPM,Cw1_MP3_BF,Cws_MP3_BF,Cse_MP3_BF,Cw1_MP3_BF_SPM,Cws_MP3_BF_SPM,Cse_MP3_BF_SPM,Cw1_MP4,Cws_MP4,Cse_MP4,Cw1_MP4_SPM,Cws_MP4_SPM,Cse_MP4_SPM,Cw1_MP4_BF,Cws_MP4_BF,Cse_MP4_BF,Cw1_MP4_BF_SPM,Cws_MP4_BF_SPM,Cse_MP4_BF_SPM,Cw1_MP5,Cws_MP5,Cse_MP5,Cw1_MP5_SPM,Cws_MP5_SPM,Cse_MP5_SPM,Cw1_MP5_BF,Cws_MP5_BF,Cse_MP5_BF,Cw1_MP5_BF_SPM,Cws_MP5_BF_SPM,Cse_MP5_BF_SPM)
    SteadyStateResults=np.linalg.solve(matrix,inputVector)
    #the following line is used to test the solution True/False
    #https://docs.scipy.org/doc/numpy/reference/generated/numpy.linalg.solve.html
    #ccc=np.allclose(np.dot(matrix,result),rightHand)
    return SteadyStateResults




















